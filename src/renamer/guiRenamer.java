package renamer;

import java.io.*;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class guiRenamer extends javax.swing.JFrame {

    /**
     * Creates new form guiRenamer
     */
    public guiRenamer() {
        initComponents();
        TA.append("ReNamer Iniciado\n\n");
        TA.append("Bienvenido, seleccione una opcion \npara iniciar.\n");
        //TA.append("Por favor seleccione un archivo CSV.\n");
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        NombreDeCSV = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        NombreDeCarpeta = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TA = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        NombreDeCSV1 = new javax.swing.JLabel();
        NombreDeCSV2 = new javax.swing.JLabel();
        NombreDeCSV3 = new javax.swing.JLabel();
        NombreDeCSV4 = new javax.swing.JLabel();
        NombreDeCSV5 = new javax.swing.JLabel();
        cbCC = new javax.swing.JRadioButton();
        cbDiploma = new javax.swing.JRadioButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("ReNamer");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 11, -1, -1));

        jButton1.setText("Seleccionar CSV");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 95, -1, -1));
        getContentPane().add(NombreDeCSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 78, -1, -1));

        jButton2.setText("Seleccionar Carpeta de Diplomas");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 136, -1, -1));
        getContentPane().add(NombreDeCarpeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 125, -1, -1));

        TA.setEditable(false);
        TA.setBackground(new java.awt.Color(0, 0, 0));
        TA.setColumns(20);
        TA.setForeground(new java.awt.Color(0, 153, 0));
        TA.setRows(5);
        jScrollPane1.setViewportView(TA);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 211, 326, 292));

        jButton3.setText("Iniciar");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, -1, -1));
        getContentPane().add(NombreDeCSV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 72, -1, -1));
        getContentPane().add(NombreDeCSV2, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 66, -1, -1));
        getContentPane().add(NombreDeCSV3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 48, -1, -1));
        getContentPane().add(NombreDeCSV4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 54, -1, -1));
        getContentPane().add(NombreDeCSV5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        buttonGroup1.add(cbCC);
        cbCC.setSelected(true);
        cbCC.setText("Course Content");
        getContentPane().add(cbCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, -1, -1));

        buttonGroup1.add(cbDiploma);
        cbDiploma.setText("Diplomas");
        getContentPane().add(cbDiploma, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 101, -1));

        jButton4.setText("Carpeta Destino");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 54, -1, -1));

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Reiniciar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Salir");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem2MouseClicked(evt);
            }
        });
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Acerca De");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //CSV*********************************************************************************************************************************
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        //Abrir csv
        JFileChooser jf1 = new JFileChooser("C:\\Users\\wcarrasco\\Dropbox\\Graduaciones Historico\\");
        int un = jf1.showOpenDialog(null);
        if (un == JFileChooser.APPROVE_OPTION) {
            File archivo = jf1.getSelectedFile();
            leerArchivo(archivo.getAbsolutePath(), archivo.getName());
        }
    }//GEN-LAST:event_jButton1MouseClicked
    //CSV*********************************************************************************************************************************

    //CARPETA DOCUMENTOS*******************************************************************************************************************
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        //Abrir carpeta
        jf2 = new JFileChooser("C:\\Users\\wcarrasco\\Dropbox\\Graduaciones Historico\\");
        jf2.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        abrir = jf2.showOpenDialog(null);
        if (!(abrir == JFileChooser.APPROVE_OPTION)) {
            addText("Error al abrir la carpeta!");
        } else {
            if (cbCC.isSelected()) {
                addText("Carpeta de Course Content seleccionada");
            } else {
                addText("Carpeta de diplomas seleccionada");
            }
        }
    }//GEN-LAST:event_jButton2MouseClicked
    //CARPETA DOCUMENTOS*******************************************************************************************************************

    //INICIAR******************************************************************************************************************************
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        if (abrir == JFileChooser.APPROVE_OPTION) {
            File folder = jf2.getSelectedFile(); //folder tiene la carpeta donde estan los diplomas separados
            File[] listOfFiles = folder.listFiles(); //listOfFiles es un arreglo con cada uno de los diplomas
            addText("Cantidad de graduandos en arreglo: " + arreglo.size() + "\nCantidad de graduandos en carpeta: " + listOfFiles.length);

            if (arreglo.size() > 99) { // arreglo contiene arreglos, cada arreglo representa una fila del csv, por ende el tamaño del arreglo debe ser igual al tamaño de listOfFiles
                System.out.println("Hay mas de 100 diplomas!");
                if (listOfFiles.length == arreglo.size()) { //Verifica que ambos tengan el mismo tamaño
                    int numero = 0; //el 0 se usa por el formato que utiliza ILovePDF al momento de hacer Split
                    for (int i = 0; i < listOfFiles.length; i++) { //Ciclo del tamaño de la cantidad de pdf
                        if (listOfFiles[i].isFile()) {//Verifica que sea un pdf y no una carpeta
                            files = listOfFiles[i].getName(); //files es el nombre del pdf (Ej. p01.pdf)
                            System.out.println("Nombre del pdf: " + files + " y el numero i es: " + i);
                            File f = listOfFiles[i];//f es el pdf con el que se esta trabajando
                            

                            String[] nombre = arreglo.get(i); //nombre es la fila que corresponde al pdf del csv
                            String programa; //Es el String donde guardara al acronimo del programa, segun lo que se lea en el CSV
                            if (nombre[11].contentEquals("Laureate Certificate in Online, Hybrid and Blended Education")) {
                                programa = "OHB";
                            } else if (nombre[11].contentEquals("Laureate Certificate in Teaching and Learning in Higher Education")) {
                                programa = "HE";
                            } else {
                                programa = "WAC";
                            }

                            /*if (i < 10) { //Entra cuando i es entre 0 y 9
                             if (f.getName().contentEquals("p0" + (i + 1) + ".pdf")) {
                             nombre = arreglo.get(i);
                             }
                             } else if (i < 100 && i > 9) { //Entra cuando el numero es entre 10 y 99
                             if (f.getName().contentEquals("p"+ (i + 1) + ".pdf")) {
                             nombre = arreglo.get(i);

                             }
                             } else if (i > 99) {//Entra cuando el numero es de 100 para arriba
                             if (f.getName().contentEquals("p"+ (i + 1) + ".pdf")) {
                             nombre = arreglo.get(i);
                             }
                             }*/
                            nombre = arreglo.get(i);

                            if (cbCC.isSelected()) {

                                String pathNuevo = historico.getPath() + "\\" + nombre[2] + "\\" + nombre[3] + "\\" + nombre[9] + "\\" + programa + "\\";
                                //String pathNuevo = "C:\\Users\\Walther\\Dropbox (laureate)\\Graduaciones Historico 2015\\" + nombre[2] + "\\" + nombre[3] + "\\" + nombre[9] + "\\" + programa + "\\";

                                File newFile1 = new File(pathNuevo);
                                if (!newFile1.exists()) {
                                    newFile1.mkdirs();
                                }
                                File newFile = new File(pathNuevo + nombre[1] + "_" + nombre[6] + "_cc.pdf");

                                addText(files + "--------------------->" + newFile.getName());
                                f.renameTo(newFile);
                            } else if (cbDiploma.isSelected()) {
                                String pathNuevo = historico.getPath() + "\\" + nombre[2] + "\\" + nombre[3] + "\\" + nombre[9] + "\\" + programa + "\\";
                                //String pathNuevo = "C:\\Users\\Walther\\Dropbox (laureate)\\Graduaciones Historico 2015\\" + nombre[2] + "\\" + nombre[3] + "\\" + nombre[9] + "\\" + programa + "\\";
                                File newFile1 = new File(pathNuevo);
                                if (!newFile1.exists()) {
                                    newFile1.mkdirs();
                                }
                                File newFile = new File(pathNuevo + nombre[1] + "_" + nombre[6] + ".pdf");
                                addText(files + "--------------------->" + newFile.getName());
                                f.renameTo(newFile);
                            }

                        }
                    }
                    addText("Listo!");
                } else {
                    addText("La cantidad de diplomas no concuerda con la cantidad de graduandos en el CSV");
                }
            } else {
                if (listOfFiles.length == arreglo.size()) {

                    int numero = 0;
                    for (int i = 0; i < listOfFiles.length; i++) {
                        if (listOfFiles[i].isFile()) {
                            files = listOfFiles[i].getName();
                            File f = listOfFiles[i];
                            String[] nombre = arreglo.get(i);
                            String programa;
                            if (nombre[11].contentEquals("Laureate Certificate in Online, Hybrid and Blended Education")) {
                                programa = "OHB";
                            } else if (nombre[11].contentEquals("Laureate Certificate in Teaching and Learning in Higher Education")) {
                                programa = "HE";
                            } else {
                                programa = "WAC";
                            }
                            if (i < 10) {
                                if (f.getName().contentEquals("p" + numero + "" + i + 1 + ".pdf")) {
                                    nombre = arreglo.get(i);

                                }
                            } else if (i > 9) {
                                if (f.getName().contentEquals("p" + i + 1 + ".pdf")) {
                                    nombre = arreglo.get(i);

                                }
                            } else if (i > 99) {
                                if (f.getName().contentEquals("p" + i + 1 + ".pdf")) {
                                    nombre = arreglo.get(i);

                                }
                            }

                            if (cbCC.isSelected()) {
                                String pathNuevo = historico.getPath() + "\\" + nombre[2] + "\\" + nombre[3] + "\\" + nombre[9] + "\\" + programa + "\\";
                                //String pathNuevo = "C:\\Users\\Walther\\Dropbox (laureate)\\Graduaciones Historico 2015\\" + nombre[2] + "\\" + nombre[3] + "\\" + nombre[9] + "\\" + programa + "\\";
                                File newFile1 = new File(pathNuevo);
                                if (!newFile1.exists()) {
                                    newFile1.mkdirs();
                                }
                                File newFile = new File(pathNuevo + nombre[1] + "_" + nombre[6] + "_cc.pdf");

                                addText(files + "--------------------->" + newFile.getName());
                                f.renameTo(newFile);
                            } else if (cbDiploma.isSelected()) {
                                String pathNuevo = historico.getPath() + "\\" + nombre[2] + "\\" + nombre[3] + "\\" + nombre[9] + "\\" + programa + "\\";
                                //String pathNuevo = "C:\\Users\\Walther\\Dropbox (laureate)\\Graduaciones Historico 2015\\" + nombre[2] + "\\" + nombre[3] + "\\" + nombre[9] + "\\" + programa + "\\";
                                File newFile1 = new File(pathNuevo);
                                if (!newFile1.exists()) {
                                    newFile1.mkdirs();
                                }
                                File newFile = new File(pathNuevo + nombre[1] + "_" + nombre[6] + ".pdf");
                                addText(files + "--------------------->" + newFile.getName());
                                f.renameTo(newFile);
                            }
                        }
                    }
                    addText("Listo!");

                } else {
                    addText("La cantidad de diplomas no concuerda con la cantidad de graduandos en el CSV");
                }
            }
        }
    }//GEN-LAST:event_jButton3MouseClicked
    //INICIAR******************************************************************************************************************************

    //REINICIAR - CTRL+R ******************************************************************************************************************
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        reiniciar();
        System.out.println("Click Reiniciar");
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    //REINICIAR - CTRL+R ******************************************************************************************************************


    private void jMenuItem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MouseClicked

    }//GEN-LAST:event_jMenuItem2MouseClicked

    //EXIT - CTRL+S*************************************************************************************************************************
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(1);
        System.out.println("Click Exit");
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    //EXIT - CTRL+S*************************************************************************************************************************

    //CARPETA DESTINO***********************************************************************************************************************
    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        JOptionPane.showMessageDialog(null, "SELECCIONE LA UBICACIÓN DE LA CARPETA \n---------->GRADUACIONES HISTORICO<----------");
        jf3 = new JFileChooser("C:\\Users\\wcarrasco\\Dropbox\\");
        jf3.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        abrir = jf3.showOpenDialog(null);
        if (!(abrir == JFileChooser.APPROVE_OPTION)) {
            addText("Error al abrir la carpeta!");
        } else {
            addText("Carpeta de Course Content seleccionada");
            historico = jf3.getSelectedFile();
        }
    }//GEN-LAST:event_jButton4MouseClicked
    //CARPETA DESTINO***********************************************************************************************************************

    //ACERCA DE*****************************************************************************************************************************
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        About();
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    //ACERCA DE*****************************************************************************************************************************

    //REINICIAR*****************************************************************************************************************************
    public void reiniciar() {
        for (int i = 0; i < arreglo.size(); i++) {
            arreglo.remove(i);
        }
        NombreDeCSV.setText("");
        TA.setText("");
        TA.append("ReNamer Iniciado\n");
        TA.append("Bienvenido\n");
        TA.append("Por favor seleccione un archivo CSV.\n");
    }
    //REINICIAR*****************************************************************************************************************************

    //LEER ARCHIVO**************************************************************************************************************************
    public void leerArchivo(String path, String nombre) {
        reiniciar();
        String csvFile = path;
        BufferedReader br = null;
        String line;
        String cvsSplitBy = ";";

        try {

            br = new BufferedReader(new FileReader(csvFile));
            while ((line = br.readLine()) != null) {
                persona = line.split(cvsSplitBy);
                arreglo.add(persona);
            }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (br != null) {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
        NombreDeCSV.setText(nombre);
        addText("CSV leido correctamente. Cantidad de graduandos: " + arreglo.size());
        addText("Ahora seleccione la carpeta contenedora de los diplomas.");
    }
    //LEER ARCHIVO**************************************************************************************************************************

    //ACERCA DE*****************************************************************************************************************************
    public void About() {
        TA.setText("****************************************************");
        addText("*                                                    *");
        addText("*     Creado por Walther Carrasco.                   *");
        addText("*     Laureate Network Office                        *");
        addText("*     Faculty Development                            *");
        addText("*                                                    *");
        addText("******************************************************");
    }

    public void addText(String s) {
        TA.append(s + "\n");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(guiRenamer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(guiRenamer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(guiRenamer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(guiRenamer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new guiRenamer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NombreDeCSV;
    private javax.swing.JLabel NombreDeCSV1;
    private javax.swing.JLabel NombreDeCSV2;
    private javax.swing.JLabel NombreDeCSV3;
    private javax.swing.JLabel NombreDeCSV4;
    private javax.swing.JLabel NombreDeCSV5;
    private javax.swing.JLabel NombreDeCarpeta;
    private javax.swing.JTextArea TA;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton cbCC;
    private javax.swing.JRadioButton cbDiploma;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    String[] persona;
    ArrayList<String[]> arreglo = new ArrayList<>();
    int abrir;
    JFileChooser jf2;
    JFileChooser jf3;
    String files;
    File historico;
}
